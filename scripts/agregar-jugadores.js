console.log('üèÉ‚Äç‚ôÇÔ∏è === AGREGANDO JUGADORES A EQUIPOS ===');

// Lista de nombres de jugadores realistas
const nombresJugadores = [
    // Nombres espa√±oles comunes
    'Alejandro Garc√≠a', 'Carlos Rodr√≠guez', 'David L√≥pez', 'Miguel Fern√°ndez',
    'Pablo Mart√≠n', 'Adri√°n S√°nchez', 'Daniel P√©rez', 'Mario G√≥mez',
    '√Ålvaro Jim√©nez', 'Sergio Ruiz', 'Hugo Moreno', 'Lucas Mu√±oz',
    'Iker Romero', 'Rub√©n Alonso', 'Diego Blanco', 'Jaime Castro',
    'Antonio Vargas', 'Francisco Ramos', 'Ra√∫l Herrera', 'Gonzalo Medina',
    'Nicol√°s Torres', 'Fernando D√≠az', 'Gabriel Santos', 'V√≠ctor Aguilar',
    'Manuel Cort√©s', 'Rafael Vega', 'Eduardo Silva', 'Roberto Morales',
    'Emilio Guerrero', 'Cristian Ortega', 'Alberto Delgado', 'Jes√∫s Molina',

    // Algunos nombres internacionales
    'Bruno Silva', 'Marco Rossi', 'Luca Bianchi', 'Andrea Conti',
    'Thomas M√ºller Jr.', 'Jean Dubois', 'Pierre Martin', 'Kevin Johnson',
    'Michael Smith', 'Ryan Williams', 'Aleksandr Petrov', 'Dmitri Volkov'
];

// Posiciones de f√∫tbol
const posiciones = [
    'Portero', 'Defensa Central', 'Lateral Derecho', 'Lateral Izquierdo',
    'Mediocentro Defensivo', 'Mediocentro', 'Mediocentro Ofensivo',
    'Extremo Derecho', 'Extremo Izquierdo', 'Delantero Centro', 'Segundo Delantero'
];

// Funci√≥n para generar un n√∫mero de dorsal aleatorio
function generarDorsal(dorsalesUsados) {
    let dorsal;
    do {
        dorsal = Math.floor(Math.random() * 99) + 1; // Del 1 al 99
    } while (dorsalesUsados.includes(dorsal));
    return dorsal;
}

// Funci√≥n para generar jugadores para un equipo
function generarJugadoresParaEquipo(equipoId, nombreEquipo, numJugadores = 18) {
    const jugadores = [];
    const dorsalesUsados = [];
    const nombresUsados = [];

    console.log(`\n‚öΩ Generando ${numJugadores} jugadores para: ${nombreEquipo}`);

    // Asegurar que hay al menos 1 portero
    const numPorteros = Math.min(2, Math.floor(numJugadores * 0.15)); // 15% porteros, m√≠nimo 1
    const numDefensas = Math.floor(numJugadores * 0.35); // 35% defensas
    const numMedios = Math.floor(numJugadores * 0.35); // 35% medios
    const numDelanteros = numJugadores - numPorteros - numDefensas - numMedios; // Resto delanteros

    let posicionesAsignadas = [];

    // Agregar porteros
    for (let i = 0; i < numPorteros; i++) {
        posicionesAsignadas.push('Portero');
    }

    // Agregar defensas
    const posicionesDefensa = ['Defensa Central', 'Lateral Derecho', 'Lateral Izquierdo', 'Defensa Central'];
    for (let i = 0; i < numDefensas; i++) {
        posicionesAsignadas.push(posicionesDefensa[i % posicionesDefensa.length]);
    }

    // Agregar medios
    const posicionesMedio = ['Mediocentro Defensivo', 'Mediocentro', 'Mediocentro Ofensivo', 'Extremo Derecho', 'Extremo Izquierdo'];
    for (let i = 0; i < numMedios; i++) {
        posicionesAsignadas.push(posicionesMedio[i % posicionesMedio.length]);
    }

    // Agregar delanteros
    const posicionesDelantero = ['Delantero Centro', 'Segundo Delantero', 'Extremo Derecho', 'Extremo Izquierdo'];
    for (let i = 0; i < numDelanteros; i++) {
        posicionesAsignadas.push(posicionesDelantero[i % posicionesDelantero.length]);
    }

    // Mezclar posiciones para variedad
    posicionesAsignadas.sort(() => Math.random() - 0.5);

    for (let i = 0; i < numJugadores; i++) {
        let nombre;
        do {
            nombre = nombresJugadores[Math.floor(Math.random() * nombresJugadores.length)];
        } while (nombresUsados.includes(nombre));
        nombresUsados.push(nombre);

        const dorsal = generarDorsal(dorsalesUsados);
        dorsalesUsados.push(dorsal);

        const posicion = posicionesAsignadas[i];
        const edad = 16 + Math.floor(Math.random() * 6); // Edades entre 16 y 21 para alevines

        const jugador = {
            id: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9),
            equipoId: equipoId,
            nombre: nombre,
            dorsal: dorsal,
            posicion: posicion,
            edad: edad,
            fechaRegistro: new Date().toISOString(),
            activo: true,
            // Estad√≠sticas opcionales
            partidosJugados: 0,
            goles: 0,
            asistencias: 0,
            tarjetasAmarillas: 0,
            tarjetasRojas: 0
        };

        jugadores.push(jugador);
        console.log(`  ${i + 1}. ${nombre} (#${dorsal}) - ${posicion} (${edad} a√±os)`);
    }

    return jugadores;
}

// IDs de los equipos de prueba (basados en los logs que vimos)
const equiposPrueba = [
    { id: "1758872778513", nombre: "Real Madrid CF Alev√≠n F7" },
    { id: "1758872778559", nombre: "Real Madrid CF Alev√≠n F7 B" },
    { id: "1758872778612", nombre: "FC Barcelona Alev√≠n F7" },
    { id: "1758872778665", nombre: "FC Barcelona Alev√≠n F7 B" },
    { id: "1758872778719", nombre: "Atl√©tico Madrid Alev√≠n F7" },
    { id: "1758872778773", nombre: "Atl√©tico Madrid Alev√≠n F7 B" },
    { id: "1758872778831", nombre: "Valencia CF Alev√≠n F7" },
    { id: "1758872778887", nombre: "Valencia CF Alev√≠n F7 B" }
];

console.log(`\nüèÜ Generando jugadores para ${equiposPrueba.length} equipos...\n`);

const todosLosJugadores = [];

equiposPrueba.forEach((equipo, index) => {
    const jugadores = generarJugadoresParaEquipo(equipo.id, equipo.nombre, 16 + Math.floor(Math.random() * 7)); // Entre 16 y 22 jugadores
    todosLosJugadores.push(...jugadores);
});

console.log(`\nüìä RESUMEN:`);
console.log(`‚úÖ Total de jugadores generados: ${todosLosJugadores.length}`);
console.log(`üìã Promedio por equipo: ${Math.round(todosLosJugadores.length / equiposPrueba.length)} jugadores`);

console.log('\nüíæ DATOS PARA IMPORTAR:');
console.log('================================================');
console.log('// Copia este c√≥digo y ejec√∫talo en la consola del navegador');
console.log('// cuando tengas la app abierta para agregar los jugadores');
console.log('');
console.log('(async () => {');
console.log('  const jugadores = ' + JSON.stringify(todosLosJugadores, null, 2) + ';');
console.log('');
console.log('  console.log("üèÉ‚Äç‚ôÇÔ∏è Importando", jugadores.length, "jugadores...");');
console.log('');
console.log('  try {');
console.log('    // Obtener datos actuales');
console.log('    const equiposData = await AsyncStorage.getItem("equipos-data");');
console.log('    let equipos = equiposData ? JSON.parse(equiposData) : [];');
console.log('');
console.log('    // Agregar jugadores a cada equipo');
console.log('    equipos = equipos.map(equipo => {');
console.log('      const jugadoresDelEquipo = jugadores.filter(j => j.equipoId === equipo.id);');
console.log('      if (jugadoresDelEquipo.length > 0) {');
console.log('        console.log(`‚ûï Agregando ${jugadoresDelEquipo.length} jugadores a ${equipo.nombre}`);');
console.log('        return {');
console.log('          ...equipo,');
console.log('          jugadores: [...(equipo.jugadores || []), ...jugadoresDelEquipo],');
console.log('          cantidadJugadores: (equipo.cantidadJugadores || 0) + jugadoresDelEquipo.length');
console.log('        };');
console.log('      }');
console.log('      return equipo;');
console.log('    });');
console.log('');
console.log('    // Guardar datos actualizados');
console.log('    await AsyncStorage.setItem("equipos-data", JSON.stringify(equipos));');
console.log('');
console.log('    console.log("‚úÖ Jugadores importados exitosamente!");');
console.log('    console.log("üîÑ Recarga la aplicaci√≥n para ver los cambios");');
console.log('  } catch (error) {');
console.log('    console.error("‚ùå Error importando jugadores:", error);');
console.log('  }');
console.log('})();');
console.log('================================================');

console.log('\nüéØ INSTRUCCIONES:');
console.log('1. Abre la app en el navegador (http://localhost:8081)');
console.log('2. Presiona F12 para abrir DevTools');
console.log('3. Ve a la pesta√±a "Console"');
console.log('4. Copia y pega el c√≥digo de arriba');
console.log('5. Presiona Enter para ejecutarlo');
console.log('6. Recarga la app para ver los jugadores');